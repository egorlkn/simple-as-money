#user  nobody;
worker_processes  auto;
worker_rlimit_nofile 2048;

#load_module modules/ngx_http_modsecurity_module.so;

error_log  /var/log/nginx/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  2048;
}


http {
    server_tokens off;
    include       mime.types;
    default_type  application/octet-stream;
    client_max_body_size 100m;

    log_format  main  '$remote_addr:$http_x_remote_port - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" '
                      '"$host" sn="$server_name" '
                      'rt=$request_time '
                      'ua="$upstream_addr" us="$upstream_status" '
                      'ut="$upstream_response_time" ul="$upstream_response_length" '
                      'cs=$upstream_cache_status' ;

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  on;
    gzip_types text/plain text/xml text/css application/xml application/xhtml+xml application/rss+xml application/javascript application/x-javascript;

    # Websocket support
    #upstream websocket {
    #    server 127.0.0.1:<PORT>;
    #}

    #server {
    #    listen       80;
    #    listen       [::]:80;
    #    server_name  _;
    #
    #    #charset koi8-r;
    #
    #    #access_log  logs/host.access.log  main;
	#    include /etc/nginx/aliases.conf;
    #
    #    #location /ws {
    #    #    proxy_pass http://websocket;
    #    #    proxy_http_version 1.1;
    #    #    proxy_set_header Upgrade $http_upgrade;
    #    #    proxy_set_header Connection "Upgrade";
    #    #}
    #    if ($http_x_remote_port = '' ) {
    #        set $http_x_remote_port $remote_port;
    #    }
    #
    #    #modsecurity on;
    #    #modsecurity_rules_file /etc/nginx/conf.d/modsecurity/modsec_includes.conf;
    #
    #    location / {
    #        root   /var/www/webroot/ROOT;
    #        index  index.html index.htm index.php;
    #
    #	    location ~ \.php$ {
    #            location ~ /\. { deny all; access_log off; log_not_found off; }
    #            include /etc/nginx/fastcgi_params;
    #            fastcgi_pass unix:/var/run/php-fpm.socket;
    #            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
    #            fastcgi_param DOCUMENT_ROOT $realpath_root;
    #            fastcgi_param PATH_INFO $fastcgi_script_name;
    #	    }
    #
    #    }
    #    index  index.php index.html index.htm;
    #
    #    #error_page  404              /404.html;
    #
    #    # redirect server error pages to the static page /50x.html
    #    #
    #    error_page   500 502 503 504  /50x.html;
    #    location = /50x.html {
    #        root   html;
    #    }
    #
    #    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #    #
    #    #location ~ \.php$ {
    #    #    proxy_pass   http://127.0.0.1;
    #    #}
    #    location ~ ^/\.well-known {    root /var/www/webroot/ROOT;  allow all;}
    #    location ~ /\.well-known {       root /var/www/webroot;  allow all;}
	#    location ~ /\. { deny all; access_log off; log_not_found off; }
    #    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #    #
    #    #location ~ \.php$ {
    #    #    root           html;
    #    #    fastcgi_pass   127.0.0.1:9000;
    #    #    fastcgi_index  index.php;
    #    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    #    include        fastcgi_params;
    #    #}
    #
    #    # deny access to .htaccess files, if Apache's document root
    #    # concurs with nginx's one
    #    #
    #    #location ~ /\.ht {
    #    #    deny  all;
    #    #}
	#    location ~ \.php$ {
    #        location ~ /\. { deny all; access_log off; log_not_found off; }
    #        include /etc/nginx/fastcgi_params;
    #        fastcgi_pass unix:/var/run/php-fpm.socket;
    #        fastcgi_param SCRIPT_FILENAME /var/www/webroot$fastcgi_script_name;
    #        fastcgi_param PATH_INFO $fastcgi_script_name;
    #        fastcgi_param DOCUMENT_ROOT /var/www/webroot;
    #    }
    #
    #}

    server {
        listen 80;
        listen [::]:80;
        server_name _;
        root /var/www/webroot/public;
        index index.php;

        location / {
            try_files $uri /index.php$is_args$args;
        }

        location ~ ^/index\.php(/|$) {
            fastcgi_pass unix:/var/run/php-fpm.socket;
            fastcgi_split_path_info ^(.+\.php)(/.*)$;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            fastcgi_param DOCUMENT_ROOT $realpath_root;
            internal;
        }
    }

    include /etc/nginx/conf.d/*.conf;
}
